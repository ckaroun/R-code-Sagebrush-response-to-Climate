{
    "contents" : "\nrequire(lme4) # for mixed effects model\nrequire(vioplot)#for violin plot which is the combo of kernel density and box plot. Also uses sm\nrequire(fitdistrplus) # fitdist for testing the distributions\n\n#Courtney's white mountain mycorrhizae data from multiple elevations\n\n# set what computer you are on\nCpUser<- \"Tower\"\n\n#change working directory based off what computer you are on\nsetwd(paste0(\"c:/Users/\",CpUser,\"/Google Drive/1 Diez lab/Dendrochronology/dendrochronology r script/\"))#setwd(\"C:/Users/barne/Downloads/\")\n\n\nmycorrRough<-read.csv(\"C:/Users/Tower/Google Drive/1 Diez lab/Dendrochronology/dendrochronology r script/mycorhizae Data for Courtney_4815.xlsx.xlsx.xlsx - Sheet1.csv\",stringsAsFactors = FALSE)\n# cycle through all the months in the regular expression since each month ends in its letter (for precip ONLY)\nmycorr<-mycorrRough[c(\"Plant\",\"PRLC\")]# make it only the last two rows which i organized in excel\n\n\nmycorr<-mycorr[complete.cases(mycorr),] #remove na\n\n#create a new row\nANum<-mycorr[grep(\"^ARRO\",mycorr$Plant),2]\nAname<-mycorr[grep(\"^ARRO\",mycorr$Plant),1]\nArtemisia<-data.frame(Aname,ANum)\n\n#Low elevation\n#Artemisia[\"elevation\"]<-NA\nArtemisia[grep(\".1-\",Artemisia$Aname),\"Elevation\"]<-3200 # elevation is third row\n\n#Mid elevation\nArtemisia[grep(\".2-\",Artemisia$Aname),3]<-3500\n\n# high elevation\nArtemisia[grep(\".3-\",Artemisia$Aname),3]<-3800\n\n\n#ADD RANDOM EFFECTS OF BLOCKS\n\nMixEff<-mycorrRough[c(\"KOMA.1.1\",\"Percent.Coln\")]\ni<-1\n# when the loop gets to ARRO make the 1-10 indexed below equal that index\nwhile (i <= length(MixEff$KOMA.1.1)){\n  \n  if(grepl(pattern = \"ARRO\",x = MixEff$KOMA.1.1[i])){\n    MixEff[(i+1):(i+10),1]<-MixEff$KOMA.1.1[i]\n    MixEff$KOMA.1.1[i]<-NA # make the previous title row blank since it doesn't correspond to data\n    #### convert zeros and ones to .000001 and .99999\n     for( b in 1:10){\n        \n        if(!is.na(MixEff$Percent.Coln[i+b])){\n          if(MixEff$Percent.Coln[i+b]==1){\n            #browser()\n            MixEff$Percent.Coln[i+b]<- MixEff$Percent.Coln[i+b]-.000001\n          }\n          if(MixEff$Percent.Coln[i+b]==0){\n            MixEff$Percent.Coln[i+b]<- MixEff$Percent.Coln[i+b]+.000001\n          }\n        }\n      }\n    i<-i+10#add 11 to the iterator to get past the renamed area on next loop\n     \n    }else{\n    MixEff$KOMA.1.1[i]<-NA # make the name NA so i can delete it when I delete rows with NA\n  }\n  i<-i+1\n  # for debugging: print(MixEff$KOMA.1.1[i])\n}\nMixEff<-MixEff[complete.cases(MixEff),] # delete all the rows with NA\n\nnames(MixEff)[1]<-\"Name\"  # rename the first column to name so it is less confusing\nnames(MixEff)[2]<-\"Sample.Percent.Coln\"\nnames(Artemisia)[2]<-\"Shrub.Percent.Coln\"\n\n#include each samples proportion values and not just their mean by merging the df you were making for mixed effects with the artemisia dataframe\nArtemisia<-merge(Artemisia,MixEff,by.x = \"Aname\", by.y=\"Name\")\n\n# Add a column that is the sample percent colonization but logit transformed to work with linear regression\n#Artemisia[\"logit.Samp.PRLC\"]<-boot::logit(Artemisia$Sample.Percent.Coln)\n\n# create new row and populate it with 1 for names with -1 i.e. ARRO 1-1\nArtemisia[grep(\"-1\",Artemisia$Aname),\"Block\"]<-\"1\" # block is fourth row\n\nfor ( i in c(\"2\",\"3\",\"4\",\"5\")){\n  \n  Artemisia[grep(paste0(\"-\",i),Artemisia$Aname),5]<-i\n}\n\n# basic linear regression\nModL<-lm(formula = Sample.Percent.Coln~Elevation,data = Artemisia)\n\nsummary(ModL)\nAIC(ModL)# lower AIC so this is a better model\n\n                    # TANGENT this is the random effect of an individual determing multiple values of PRLC \n                    ModMel<-lmer(Sample.Percent.Coln~Elevation + (1|Block),data = Artemisia)\n                    \n                    \n                    summary(lmerTest::lmer(Sample.Percent.Coln~Elevation + (1|Block),data = Artemisia))\n                    AIC(ModMel) # higher AIC so it is a worse model\n\n# but neither the normality or heteroskadascity assumptions are met for the regular linear regression\n  # normality\n  \n  # this tests the fit of all possibl distributions. We lie in the beta distributions which is most appropriate because it is the distribution of probabilities which is what we have\n  descdist(Artemisia$Sample.Percent.Coln)\n  \n  # fit to a normal distribution.\n  # fit is bad\n  f1<-fitdist(Artemisia$Sample.Percent.Coln,\"norm\",method=\"mme\")\n  \n  #fit to a beta distribution ( for proportions) also works for overdispersed binomial distribution\n  # fit is good\n  f2<-fitdist(Artemisia$Sample.Percent.Coln,\"beta\",method=\"mme\")\n  \n  #heteroskadascity\n  # this is a \"studentized Breusch- Pagan test\" and it shows heteroskedasticity if p<.05. This shows that linear regression is not appropriate \n  lmtest::bptest(ModL)\n\n# run a quasibinomial glm\nModQB <-glm(formula = Sample.Percent.Coln~Elevation,family = quasibinomial(link=logit),data = Artemisia )\n\nsummary(ModQB)\n\n\n# model is still has high heteroskadascity\nlmtest:::bptest(ModQB)\n\n\n# Run a beta regression\nModBeta<-betareg::betareg(formula = Sample.Percent.Coln~Elevation,data = Artemisia)\nsummary(ModBeta)\n  lmtest::bptest(ModBeta)\n# AIC blows the other ones out of the water!!!!\n  AIC(ModBeta)  \n  # diagnostic plots from betareg pdf\n  plot(ModBeta, which = 1:4, type = \"pearson\")\n  plot(ModBeta, which = 5, type = \"deviance\", sub.caption = \"\")\n  plot(ModBeta, which = 1, type = \"deviance\", sub.caption = \"\")\n  \n  \n# Run a beta regression with a log-log link function this time\n  ModBeta2<-betareg::betareg(formula = Sample.Percent.Coln~Elevation,data = Artemisia,link=\"loglog\")\n  summary(ModBeta2)# psuedo r 2 is worse\n  lmtest::bptest(ModBeta2)\n  # AIC slightly worse than other link function\n  AIC(ModBeta2)  \n  plot(ModBeta2,which=6)\n  \n  \n  \n \n\nx32 <- Artemisia[Artemisia$Elevation==3200,\"Sample.Percent.Coln\"]\nx35 <- Artemisia[Artemisia$Elevation==3500,\"Sample.Percent.Coln\"]\nx38 <- Artemisia[Artemisia$Elevation==3800,\"Sample.Percent.Coln\"]\nvioplot(x32,x35,x38,names = c(\"3200m PRLC\",\"3500m PRLC\", \"3800m PRLC\"))\n# from the sm package run the denisty compare to compare the distributions at different elevations\nsm::sm.density.compare(x=Artemisia$Sample.Percent.Coln,group = Artemisia$Elevation)\nlegend(\"topleft\",legend=c(\"3200m PRLC\",\"3500m PRLC\", \"3800m PRLC\"), lty=c(1,2,3),col = c(2,3,1))\n",
    "created" : 1460998838141.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1960408979",
    "id" : "342D23A3",
    "lastKnownWriteTime" : 1460136479,
    "path" : "C:/Users/Tower/Google Drive/1 Diez lab/Dendrochronology/dendrochronology r script/Courtney's white mountian mycorr data.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}